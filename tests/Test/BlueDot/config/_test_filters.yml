configuration:

    simple:
        select:
            find_all_languages_array:
                sql: SELECT * FROM languages ORDER BY language

            find_all_languages_object:
                sql: SELECT * FROM languages ORDER BY language
                model:
                    object: Test\BlueDot\Model\Language

            find_word_translations_simple:
                sql: SELECT w.*, t.translation FROM words AS w INNER JOIN translations AS t ON w.id = t.word_id WHERE w.id = :word_id
                parameters: [word_id]

    scenario:
        find_words:
            atomic: true
            return_data: [select_all_words]
            statements:
                find_working_language:
                    sql: "SELECT language_id FROM user_working_languages WHERE user_id = :user_id AND working_language = 1"
                    parameters: [user_id]
                select_all_words:
                    sql: "SELECT w.*, c.category, t.translation FROM words AS w INNER JOIN categories AS c INNER JOIN word_category AS wc INNER JOIN translations AS t ON w.id = wc.word_id AND wc.category_id = c.id AND t.word_id = w.id"
                    use:
                        statement_name: find_working_language
                        values: { find_working_language.language_id: language_id }